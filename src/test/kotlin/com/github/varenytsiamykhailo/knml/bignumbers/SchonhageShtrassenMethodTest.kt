package com.github.varenytsiamykhailo.knml.bignumbers

import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test

internal class SchonhageShtrassenMethodTest {
    @Test
    fun schonhageShtrassenTest() {
        val x = BigNumber("1234567890123456789012")
        val y = BigNumber("987654321987654321098")

        val multiplyMethod = MultiplyMethod()
        val sum = multiplyMethod.schonhageShtrassen(x, y)

        Assertions.assertEquals("1219326312467611632493760095208585886175176", sum.number)
    }

    @Test
    fun schonhageShtrassenTestWithOneSmallNumber() {
        val x = BigNumber("101010101010")
        val y = BigNumber("2")

        val multiplyMethod = MultiplyMethod()
        val sum = multiplyMethod.schonhageShtrassen(x, y)

        Assertions.assertEquals("202020202020", sum.number)
    }

    @Test
    fun schonhageShtrassenTestWithSecondSmallNumber() {
        val x = BigNumber("2")
        val y = BigNumber("101010101010")

        val multiplyMethod = MultiplyMethod()
        val sum = multiplyMethod.schonhageShtrassen(x, y)

        Assertions.assertEquals("202020202020", sum.number)
    }

    @Test
    fun schonhageShtrassenWithAnotherLengthNumbers() {
        val x = BigNumber("101010101010")
        val y = BigNumber("222")

        val multiplyMethod = MultiplyMethod()
        val sum = multiplyMethod.schonhageShtrassen(x, y)

        Assertions.assertEquals("22424242424220", sum.number)
    }

    @Test
    fun schonhageShtrassenWithVeryBigNumbers() {
        val x = BigNumber("3612914492786152416515689140631817933041135824892106963043421568452488713959027668729000413530427143731157737284300811582423977711429105364796474643867015951243525920567657837202011601563753480051017385174060922132214253222114869560068604935171677332373073194811089305670975845843548930773704291920164100380839047468427196229795237494837520604633405923330594309412782094843783073498721972716947605629832237440930408964278651829312005384866748917039808664042745477604262092442364458939635791251505648837975693622334198698396330162674516146756413403959385887106782431357368353196502565782565382969280899884291645739896889167741742699855529355443119019953498765261696550657845065674064257268621561203630267885123418818816230264072244347671846217465834010713753180384682746928092722435215085173534146670745617002042442562999617595165362319898229435109282422759033817679934250296161147315198842919917372764465992853144888699654240384965329832073796094388981654060447000500383766588368717370481037924539766")
        val y = BigNumber("2392058700183132749465709045039423467433468599767470976045831587583789811903266400428050532139461794351408134833475797994547133244937508879301934772465978751318287718475987977835578533656934597851961499429382358407136590702982634678187177089901934141076269979530633716429667450487655086839793394435373324692671833780030884908752058177306142437369804305268133315329468077824447209038939265494169631692026049398023950120792301007401414127132617957774518084537768510428318449918250881973640657296953656796886937717428836085856227328659907545845433922550675475699317872646060535772216855057437443035797732070457908142874165404166852162964876065950470860282153927875867490385927521448860448763678276561475081953066002279551614244740486386582797577491271325220920251992145403531231263477548967352655678384289057022870655434816021168340906062981955289112900083456178657476938724760718572626310516448674172277483153160077770125812001058131205125102556883433751334479124545699763814284072393100268796683541501")

        val multiplyMethod = MultiplyMethod()
        val sum = multiplyMethod.schonhageShtrassen(x, y)
        val expected = "8642303545486846092100813614757906785466644244077769414738126555993764800076785038629205754399107887868280474726061115289561687755225750864072468130965725259599054957290126338242516233860283042473446012666379107962246963160885214980914456907594009651872058967224630756766271493363388901074999838409594193490037709713763321815670475462686070355363691027702909108889885098334794787643506744574830358422036689232275537535713131927726778462766693773877190820258695969220011528730253206898115573194346783758818647898824817370231367916696656297021990784005186809883846096276027404885763305734943486472134371936359775271482988553687973878571997889826559292769195341307938603361882237068957458491643677043955566549679618118338385288190864175526108037045551077252561205112717810196774137846758957015420979684477518904593692092373910501101466655806200743668249317952448917839760154986026491602068711794526649804120028811189864437698301919695538479707342580345829360911420775319704067336668773280927655211743592532805091647258723020772427468653996979806757415843408067981975237776142530243619669101436283938687485073629469095178665541179455548774047871910618357851947458477017812093823291445925445998287777166938143336804217582732365664639588275595575806429665160099957971379816548682644942858433944300514590185915217267512416551073244476283944897365807616291296029997448274832554344938894954154455470872140678142575466090075627430539441297178703465698969756365061410414178149819726439830279759632829598236915802627191321953406031343318386954466766946374029399363377651943565336183195776105186558035568887126658719050149489394877142716818272804535255476756216366249404526115879680766484042075259949547321010609228497495277708914905183281776470324209330779909720472355190731162390526079583111977819409707762398254121349376529038172591764968878132036827333113333956370862781596690626075854039971223480003594659983791922814399217626342766579387743694333039021903763478608425106639824910577667360945919572385828766"

        Assertions.assertEquals(expected, sum.number)
    }
}
