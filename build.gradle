plugins {
    //id 'java'
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'org.jetbrains.dokka' version '1.6.0'
    //id 'application'
}

group 'com.github.varenytsiamykhailo'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

//mainClassName = 'com.github.varenytsiamykhailo.knml.Main'

jar {
    manifest {
        //attributes 'Main-Class': mainClassName
        attributes 'Implementation-Title': project.name
        attributes 'Implementation-Version': project.version
        attributes 'Implementation-Group': project.group
    }


    // This line needs to resolve java.lang.NoClassDefFoundError: kotlin/jvm/internal/Intrinsics exception
    // when one try to use this library with the other JVM languages like as java.
    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    //from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.apache.commons:commons-math3:3.6'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'org.jfree:jfreechart:1.0.19'
}

compileJava {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}
compileTestJava {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}